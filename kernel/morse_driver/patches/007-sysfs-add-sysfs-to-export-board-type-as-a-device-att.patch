From 9ebc9a01e90f65f058ed21d3190800dc130b6ef4 Mon Sep 17 00:00:00 2001
From: Arien Judge <arien.judge@morsemicro.com>
Date: Wed, 28 Feb 2024 13:29:28 +1100
Subject: [PATCH] sysfs: add sysfs to export board type as a device attribute

The driver reads the board type from OTP to decide which bcf file to load,
but doesn't report this information anywhere useful.

Read the value read from OTP as a sysfs device attribute to allow userspace
applications to reliably report the module type on chip.

Opted for creating a proper sysfs device attribute here instead of using
debugfs as we shouldn't expect user tooling to have such a hard dependency

cache board id on firmware init for sysfs reporting
---
 Makefile   |  1 +
 firmware.c |  3 +++
 mac.c      |  6 ++++++
 morse.h    |  1 +
 sysfs.c    | 46 ++++++++++++++++++++++++++++++++++++++++++++++
 sysfs.h    |  9 +++++++++
 6 files changed, 66 insertions(+)
 create mode 100644 sysfs.c
 create mode 100644 sysfs.h

Index: morse_driver-rel_1_15_1_2025_Mar_16/Makefile
===================================================================
--- morse_driver-rel_1_15_1_2025_Mar_16.orig/Makefile
+++ morse_driver-rel_1_15_1_2025_Mar_16/Makefile
@@ -116,6 +116,7 @@ endif
 obj-$(CONFIG_WLAN_VENDOR_MORSE) += morse.o dot11ah/
 
 morse-y = mac.o
+morse-y += sysfs.o
 morse-y += init.o
 morse-y += skbq.o
 morse-y += debug.o
Index: morse_driver-rel_1_15_1_2025_Mar_16/firmware.c
===================================================================
--- morse_driver-rel_1_15_1_2025_Mar_16.orig/firmware.c
+++ morse_driver-rel_1_15_1_2025_Mar_16/firmware.c
@@ -888,6 +888,9 @@ int morse_firmware_init(struct morse *mo
 	if (mors->cfg->get_board_type && enable_otp_check)
 		board_id = mors->cfg->get_board_type(mors);
 
+	/* store the board id for sysfs reporting. Propagate the error */
+	mors->board_id = board_id;
+
 	if (strlen(board_config_file) > 0) {
 		n = snprintf(bcf_path, sizeof(bcf_path), "%s/%s", MORSE_FW_DIR, board_config_file);
 	} else if (strlen(mors->board_serial) > 0) {
Index: morse_driver-rel_1_15_1_2025_Mar_16/mac.c
===================================================================
--- morse_driver-rel_1_15_1_2025_Mar_16.orig/mac.c
+++ morse_driver-rel_1_15_1_2025_Mar_16/mac.c
@@ -14,6 +14,7 @@
 #include "mac.h"
 #include "s1g_ies.h"
 #include "bus.h"
+#include "sysfs.h"
 #include "debug.h"
 #include "command.h"
 #include "vendor.h"
@@ -6878,6 +6879,10 @@ int morse_mac_register(struct morse *mor
 	INIT_WORK(&mors->health_check, morse_health_check_work);
 	INIT_WORK(&mors->hw_stop, morse_hw_stop_work);
 
+	ret = morse_sysfs_init(mors);
+	if (ret)
+		MORSE_ERR(mors, "Unable to initialise sysfs\n");
+
 	ret = morse_init_debug(mors);
 	if (ret)
 		MORSE_ERR(mors, "Unable to create debugfs files\n");
@@ -7063,6 +7068,7 @@ static void morse_mac_deinit(struct mors
 
 void morse_mac_unregister(struct morse *mors)
 {
+	morse_sysfs_free(mors);
 	morse_led_exit(mors);
 	morse_deinit_debug(mors);
 	morse_ps_disable(mors);
Index: morse_driver-rel_1_15_1_2025_Mar_16/morse.h
===================================================================
--- morse_driver-rel_1_15_1_2025_Mar_16.orig/morse.h
+++ morse_driver-rel_1_15_1_2025_Mar_16/morse.h
@@ -1165,6 +1165,7 @@ struct morse {
 	struct morse_debug debug;
 
 	char *board_serial;
+	int board_id;
 
 	/* Stored Channel Information, sta_type, enc_mode, RAW */
 	struct morse_custom_configs custom_configs;
Index: morse_driver-rel_1_15_1_2025_Mar_16/sysfs.c
===================================================================
--- /dev/null
+++ morse_driver-rel_1_15_1_2025_Mar_16/sysfs.c
@@ -0,0 +1,46 @@
+/*
+ * Copyright 2024 Morse Micro
+ *
+ */
+
+#include <linux/sysfs.h>
+#include "morse.h"
+#include "sysfs.h"
+#include "debug.h"
+
+static ssize_t board_type_show(struct device *dev,
+					   struct device_attribute *attr,
+					   char *buf)
+{
+	struct morse *mors = dev_get_drvdata(dev);
+
+	if (!mors)
+		return -EINVAL;
+
+	if (mors->board_id < 0)
+		return mors->board_id;
+
+#if KERNEL_VERSION(5, 10, 0) <= LINUX_VERSION_CODE
+	return sysfs_emit(buf, "%d\n", mors->board_id);
+#else
+	return snprintf(buf, PAGE_SIZE, "%d\n", mors->board_id);
+#endif
+}
+
+static DEVICE_ATTR_RO(board_type);
+
+int morse_sysfs_init(struct morse *mors)
+{
+	int ret;
+
+	ret = device_create_file(mors->dev, &dev_attr_board_type);
+	if (ret < 0)
+		MORSE_ERR(mors, "failed to create sysfs file board_type");
+
+	return ret;
+}
+
+void morse_sysfs_free(struct morse *mors)
+{
+	device_remove_file(mors->dev, &dev_attr_board_type);
+}
Index: morse_driver-rel_1_15_1_2025_Mar_16/sysfs.h
===================================================================
--- /dev/null
+++ morse_driver-rel_1_15_1_2025_Mar_16/sysfs.h
@@ -0,0 +1,9 @@
+/*
+ * Copyright 2024 Morse Micro
+ *
+ */
+
+#pragma once
+
+int morse_sysfs_init(struct morse *mors);
+void morse_sysfs_free(struct morse *mors);
